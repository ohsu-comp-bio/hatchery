/*
 * Hatchery API
 *
 * Workspace service for launching and interacting with containers.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ContainerState struct {

	// Name of this container
	Name string `json:"name,omitempty"`

	State ContainerStateDetail `json:"state,omitempty"`

	Ready bool `json:"ready,omitempty"`
}

// AssertContainerStateRequired checks if the required fields are not zero-ed
func AssertContainerStateRequired(obj ContainerState) error {
	if err := AssertContainerStateDetailRequired(obj.State); err != nil {
		return err
	}
	return nil
}

// AssertRecurseContainerStateRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ContainerState (e.g. [][]ContainerState), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseContainerStateRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aContainerState, ok := obj.(ContainerState)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertContainerStateRequired(aContainerState)
	})
}
