/*
 * Hatchery API
 *
 * Workspace service for launching and interacting with containers.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ContainerStateDetailTerminated struct {

	ExitCode int32 `json:"exitCode,omitempty"`

	Signal int32 `json:"signal,omitempty"`

	Reason string `json:"reason,omitempty"`

	Message string `json:"message,omitempty"`

	StartedAt string `json:"startedAt,omitempty"`

	FinishedAt string `json:"finishedAt,omitempty"`

	ContainerID string `json:"containerID,omitempty"`
}

// AssertContainerStateDetailTerminatedRequired checks if the required fields are not zero-ed
func AssertContainerStateDetailTerminatedRequired(obj ContainerStateDetailTerminated) error {
	return nil
}

// AssertRecurseContainerStateDetailTerminatedRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ContainerStateDetailTerminated (e.g. [][]ContainerStateDetailTerminated), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseContainerStateDetailTerminatedRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aContainerStateDetailTerminated, ok := obj.(ContainerStateDetailTerminated)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertContainerStateDetailTerminatedRequired(aContainerStateDetailTerminated)
	})
}
