/*
 * Hatchery API
 *
 * Workspace service for launching and interacting with containers.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// WorkspaceApiService is a service that implents the logic for the WorkspaceApiServicer
// This service should implement the business logic for every endpoint for the WorkspaceApi API. 
// Include any external packages or services that will be required by this service.
type WorkspaceApiService struct {
}

// NewWorkspaceApiService creates a default api service
func NewWorkspaceApiService() WorkspaceApiServicer {
	return &WorkspaceApiService{}
}

// Launch - LaunchAWorkspace
func (s *WorkspaceApiService) Launch(ctx context.Context, id string, rEMOTEUSER string, authorization string) (ImplResponse, error) {
	// TODO - update Launch with the required logic for this service method.
	// Add api_workspace_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Status{}) or use other options such as http.Ok ...
	//return Response(200, Status{}), nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Launch method not implemented")
}

// Options - Get the available workspace options that can be launched
func (s *WorkspaceApiService) Options(ctx context.Context, rEMOTEUSER string, authorization string) (ImplResponse, error) {
	// TODO - update Options with the required logic for this service method.
	// Add api_workspace_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Container{}) or use other options such as http.Ok ...
	//return Response(200, []Container{}), nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Options method not implemented")
}

// Paymodels - 
func (s *WorkspaceApiService) Paymodels(ctx context.Context, rEMOTEUSER string) (ImplResponse, error) {
	// TODO - update Paymodels with the required logic for this service method.
	// Add api_workspace_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, ComponentsSchemasPayModel{}) or use other options such as http.Ok ...
	//return Response(200, ComponentsSchemasPayModel{}), nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Paymodels method not implemented")
}

// Status - Get the current status of the workspace
func (s *WorkspaceApiService) Status(ctx context.Context, rEMOTEUSER string, authorization string) (ImplResponse, error) {
	// TODO - update Status with the required logic for this service method.
	// Add api_workspace_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Status{}) or use other options such as http.Ok ...
	//return Response(200, []Status{}), nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Status method not implemented")
}

// Terminate - Terminate the actively running workspace
func (s *WorkspaceApiService) Terminate(ctx context.Context, rEMOTEUSER string, authorization string) (ImplResponse, error) {
	// TODO - update Terminate with the required logic for this service method.
	// Add api_workspace_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	//TODO: Uncomment the next line to return response Response(401, {}) or use other options such as http.Ok ...
	//return Response(401, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("Terminate method not implemented")
}

